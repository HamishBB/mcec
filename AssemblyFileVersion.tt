<#@ template language="C#" hostSpecific="True"#>
<#@ output extension="cs" #>
<#@ import namespace="System.IO" #>
<#

#>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
using System.Reflection;

[assembly: AssemblyVersion("<#= this.Version #>")]
[assembly: AssemblyFileVersion("<#= this.Version #>")]
[assembly: AssemblyCopyright("Copyright © <#= this.Year #> Kindel Systems, LLC.")]

<#+
	private string version;

	public string Version
	{
		get
		{
			if (version == null)
			{
				// read the current version from the file in the solution directory
				var path = this.Host.ResolveAssemblyReference("$(SolutionDir)");
				string full = Path.Combine(path, "install_version.txt");
				string contents = File.ReadAllText(full);

				string[] parts = contents.Split('.');
				int build;
				if (int.TryParse(parts[3], out build))
				{
					// increment the build number
					parts[3] = (build + 1).ToString();
				}

				version = string.Join(".", parts);

				// write the new version number back to the file
				File.WriteAllText(full, version);
			}

			return version;
		}
	}

	public string Year = DateTime.Now.ToString("yyyy");

#>
